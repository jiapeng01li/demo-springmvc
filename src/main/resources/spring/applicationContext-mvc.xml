<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		">
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<!-- <context:component-scan base-package="com.jplee.springmvc.controller" /> -->
	
	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.jplee.springmvc" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 申明我们的异常解析处理类-->
    <!-- <bean id="customerExceptionResolver" class="com.jplee.springmvc.common.CustomerExceptionResolver"></bean> -->
    <!-- 异常控制器 -->
	<!-- <bean id="exceptionResolver" class="com.jplee.springmvc.common.CustomSimpleMappingExceptionResolver">
		<property name="exceptionMappings">
              <props>
                  <prop key="java.lang.Exception">
                       common/error
                </prop>
            </props>
        </property>
		
		<property name="defaultErrorView" value="common/error" />
	</bean> -->
	
	<!-- 处理器映射器 -->
	<!-- <bean clsass="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean> -->
	<!-- 处理器适配射器 -->
	<!-- <bean clsass="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean> -->

	<!-- 配置注解驱动 可替代上面处理器映射器和处理器适配器的配置-->
	<mvc:annotation-driven conversion-service="conversionServer">
		<mvc:message-converters>
			 <!-- 设置返回字符串编码 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- json转换器 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" >
                <property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
                <property name="features">
                  <array>
                    <value>WriteMapNullValue</value>
                    <value>WriteNullStringAsEmpty</value>
                    <value>WriteNullListAsEmpty</value>
                  </array>
                </property>
                <!-- <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/> -->
            </bean>
            <!-- json转换器 -->
            <!-- <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean> -->
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!--配置类型转换器 即自定义参数绑定 -->
	<bean id="conversionServer" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 日期转换器 -->
		<property name="converters">
			<list>
				<bean class="com.jplee.springmvc.converter.DateConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- 多附件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="10485760000"></property> <!-- 上传文件的大小  单位是字节,-1代表无限制 --> 
        <property name="maxInMemorySize" value="40960"></property><!-- 最大内存大小 -->
	</bean>
	
	<!-- 对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<!-- <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources> -->
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<bean id="testInterceptor" class="com.jplee.springmvc.interceptor.TestInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<bean id="stopWatchInterceptor" class="com.jplee.springmvc.interceptor.StopWatchHandlerInterceptor"></bean>
		</mvc:interceptor>	
	</mvc:interceptors>
	
	<!-- 视图解释类 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" /><!-- 可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

</beans>
